////////////////////////////////////////////////////
// Name: Taylor Murphy
// Class : CMPS 4883 Advanced Programing Techniques
// Date : 5 October 2015
// Program 2 - Coin Sorter
////////////////////////////////////////////////////
/*
Notes:

Declare a class CoinSorter. 

Choose your methods
    two constructors 
    a toString method
    a serialize method (that puts the ArrayList into the array and sorts it)
    a fillRolls method
    computeTotal method

An ArrayList must be used to contain the coin denominations. 

A sorted array must be used to contain the coin denominations sorted. 

CoinSorter has 
    the ArrayList 
    the array 
    the four counts of filled rolls of various coins 
    and the four counts of partially unfilled rolls

Main should 
    print headings
    prompt for file names
        could randomly generate and input file 
        close it and re-open it for reading
        then read and process data in the file
        close the files, then stop. 
    
    have a double nested loop
        a while !eof loop
        a while !marker loop 

Correctness

    CoinSorter class (constructors and proper methods)                      (10)
    Use try/catch for File I/O                                              (4)
    Uses Random to generate input file                                      (10)
    Reads file correctly up to marker                                       (4)
    Inserts coin into CoinSorter object which inserts it into its ArrayList (3)         	
    CoinSorter calculates number of rolls/leftovers correctly               (5)
        CoinSorter converts ArrayList to a 1D array                         (2)
    CoinSorter returns number of rolls/leftovers correctly for one subset   (4)
        CoinSorter accumulates number of rolls/leftovers correctly          (5) 
        for each successive subset 
    Prints correct results for number of rolls/leftovers                    (2)
================================================================================

Algorithm 

    Short main (calls methods)                                              (5)
    Methods to:                                                             (10)
        ReadFile----
        ProcessSubset
        OpenStreams
        PrintMessages
        PrintHeading 
================================================================================

Input

    Gets input from file generated by Random                                (4)
================================================================================

Output 

    Screen output:                                                          (2)
        Intro and Exit Screen
        Prompts understandable

    Output file                                                             (8)
        Heading
        listing of rolls/leftovers neat
        money data formatted
        column headings
        labels
================================================================================

Style                                                                       (5)
        use of blank lines
        indentation
        ids and method names  
        NO I/O in main
        NO I/O in non-main class except for error messages
================================================================================

Documentation                                                               (5)
    methods documented
    program and files documented
        name
	internal code comments
================================================================================

General                                                                     (5)
    Turned in everything required (source code, 2 input files, 
        2 outputs per input file, executable)
    Used Separate files
================================================================================

*/
package p2main;

import java.io.IOException;

public class P2main
{
    public static void main(String[] args) throws IOException
    {
        coinsorter.CoinSorter CS = new coinsorter.CoinSorter();
        
        CS.readFile();
    }
}
